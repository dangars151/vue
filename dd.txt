// data() {
  //   return {
  //     images: null,
  //     imgPaging: [],
  //     perPage: 10,
  //     currentPage: 1,
  //     maxPage: 0,
  //   }
  // },
  // mounted() {
  //   axios
  //     .get(
  //       'https://api.unsplash.com/photos?client_id=sUV22DxAKlFhcqd51VsFin7iWwObGbNcZgfAgu_qGqY&per_page=100'
  //     )
  //     .then((response) => {
  //       this.maxPage = Math.ceil(response.data.length / this.perPage)
  //       this.images = response.data
  //       let start = this.perPage * (this.currentPage - 1)
  //       this.imgPaging = [...this.images].splice(start, this.perPage)
  //     })
  // },
  // methods: {
  //   paging: function (e) {
  //     if (e.target.innerHTML == 'Previous') {
  //       if (this.currentPage > 1) {
  //         this.currentPage -= 1
  //       }
  //     } else if (e.target.innerHTML == 'Next') {
  //       if (this.currentPage < this.maxPage) {
  //         this.currentPage += 1
  //       }
  //     } else {
  //       this.currentPage = parseInt(e.target.innerHTML)
  //     }
  //     let start = this.perPage * (this.currentPage - 1)
  //     this.imgPaging = [...this.images].splice(start, this.perPage)
  //   },
  // },







  data() {
    return {
      image: null,
      images: [],
      imgPaging: [],
      perPage: 6,
      currentPage: 1,
      maxPage: 1,
    }
  },
  mounted() {
    axios
      .get(
        `https://5f3798a9bbfd1e00160bf413.mockapi.io/api/v1/list-feed/list-feed`
      )
      .then((response) => {
        this.image = response.data[this.$route.params.id - 1]
        this.images = [...response.data].splice(this.$route.params.id, 15)
        this.maxPage = Math.ceil(this.images.length / this.perPage)
        let start = this.perPage * (this.currentPage - 1)
        this.imgPaging = [...this.images].splice(start, this.perPage)
      })
  },
  methods: {
    paging: function (e) {
      if (e.target.innerHTML == 'Previous') {
        if (this.currentPage > 1) {
          this.currentPage -= 1
        }
      } else {
        if (this.currentPage < this.maxPage) {
          this.currentPage += 1
        }
      }

      let start = this.perPage * (this.currentPage - 1)
      this.imgPaging = [...this.images].splice(start, this.perPage)
    },
  },




  data() {
    return {
      images: [],
      imgPaging: [],
      perPage: 8,
      currentPage: 1,
      maxPage: 1,
    }
  },
  mounted() {
    axios
      .get(
        `https://5f3798a9bbfd1e00160bf413.mockapi.io/api/v1/list-feed/list-feed`
      )
      .then((response) => {
        this.images = [...response.data].splice(this.$route.params.id, 32)
        this.maxPage = Math.ceil(this.images.length / this.perPage)
        let start = this.perPage * (this.currentPage - 1)
        this.imgPaging = [...this.images].splice(start, this.perPage)
      })
  },
  methods: {
    paging: function (e) {
      if (e.target.innerHTML == 'Previous') {
        if (this.currentPage > 1) {
          this.currentPage -= 1
        }
      } else {
        if (this.currentPage < this.maxPage) {
          this.currentPage += 1
        }
      }

      let start = this.perPage * (this.currentPage - 1)
      this.imgPaging = [...this.images].splice(start, this.perPage)
    },
  },



  <nav aria-label="Page navigation example">
      <ul
        class="pagination"
        style="justify-content: center; margin-top: 30px; margin-bottom: -25px"
      >
        <li class="page-item">
          <a class="page-link" href="#" v-on:click="paging" v-if="currentPage > 1">Previous</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#">{{ currentPage }}</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="#" v-on:click="paging" v-if="currentPage < maxPage">Next</a>
        </li>
      </ul>
    </nav>
    <br />
    <br />